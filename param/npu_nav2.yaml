#实车需要改变所有的仿真时间
amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.005
    alpha2: 0.005
    alpha3: 0.01
    alpha4: 0.005
    alpha5: 0.003
    #修改
    base_frame_id: "footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 5.0
    laser_max_range: 10.0
    laser_min_range: 0.1
    #上车后要改
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 5000
    min_particles: 70
    #修改
    odom_frame_id: "odom_link"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "omnidirectional"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    #修改
    transform_tolerance: 0.1
    #修改
    update_min_a: 0.05
    update_min_d: 0.03
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    #修改
    scan_topic: /car/scan

amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link
    #修改
    odom_topic: /car/odom
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 5.0
    #修改，低于该速度时，里程计设为零
    min_x_velocity_threshold: 0.0001
    min_y_velocity_threshold: 0.0001
    min_theta_velocity_threshold: 0.0001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      #修改
      #为了达到目标，机器人必须移动的最小量
      required_movement_radius: 0.5
      #机器人必须移动最小半径的最大时间
      movement_time_allowance: 10.0
    # Goal checker parameters
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      #满足目标完成标准的容忍度
      xy_goal_tolerance: 0.05
      yaw_goal_tolerance: 0.05
      #旋转到目标方向后是否检查XY的位置公差
      stateful: True
    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      #最小速度X
      min_vel_x: -0.26
      #最小速度Y
      min_vel_y: -0.26
      #最大
      max_vel_x: 0.26
      max_vel_y: 0.26
      #最大角速度rad/s
      max_vel_theta: 0.2
      #最大最小平移速度
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      #最小角速度
      min_speed_theta: -0.2
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      
      #最大加速度X、Y方向（m/s）
      #修改
      acc_lim_x: 0.05
      acc_lim_y: 0.05
      #最大加速旋转（rad/s）
      acc_lim_theta: 0.05
      #最大减速X、Y方向
      decel_lim_x: -0.05
      decel_lim_y: -0.05
      #最大减速旋转
      decel_lim_theta: -0.05
      #X、Y、theta方向上速度样本数
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      #提前模拟时间
      sim_time: 1.7
      #线性距离和角度forward to project
      linear_granularity: 0.05
      angular_granularity: 0.025
      #tf变换公差
      transform_tolerance: 0.2
      #满足目标标准的容忍度Tolerance to meet goal completion criteria 
      xy_goal_tolerance: 0.05
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      #这些没有改
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

local_costmap:
  local_costmap:
    ros__parameters:
    #修改
    #代价地图更新频率
      update_frequency: 15.0
      #将costmap发布的频率
      publish_frequency: 10.0
      #修改
      #参考坐标系
      global_frame: odom_link
      #机器人基座坐标系
      robot_base_frame: base_link
      use_sim_time: True
      #costmap是否和机器人底座一起旋转
      rolling_window: true
      #成本地图宽
      width: 3
#      成本地图高
      height: 3
      #一像素的分辨率
      resolution: 0.05
      #修改
      #机器人半径0.3m
      robot_radius: 1.0
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        #膨胀半径上的指数衰减因子
        cost_scaling_factor: 3.0
        #扩大致命障碍物周围的成本图的半径(碰撞层)
        inflation_radius: 0.5
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        #是否发布3D体素网格进行调试
        publish_voxel_map: True
        #从哪开始标记立体像素
        origin_z: 0.0
        #立体像素高度分辨率
        z_resolution: 0.05
        #立体像素高到标记，最多16个
        z_voxels: 16
        #增加到占用网格的最大高度
        max_obstacle_height: 2.0
        #2D占用网格中标记为占用的列中的最小立体像素数量
        mark_threshold: 0
        #数据源的命名空间
        observation_sources: scan
        scan:
        #修改
          topic: /car/scan
          #增加到占用网格的最大高度
          max_obstacle_height: 2.0
          #source是否应在costmap中清除raytrace（渲染）
          clearing: True
          #是否需要标记
          marking: False
          data_type: "LaserScan"
      static_layer:
      #地图主题的QoS设置
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

global_costmap:
  global_costmap:
    ros__parameters:
    #修改
      update_frequency: 4.0
      publish_frequency: 4.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      #修改若未提供足迹，则使用机器人半径0.3m
      robot_radius: 1.0
      #成本图1像素的分辨率（m）
      resolution: 0.05
      #如果为false，则将位置空间视为自由空间，否则为未知空间
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
        #修改
          topic: /car/scan
          max_obstacle_height: 2.0
          ##source是否应在costmap中清除raytrace（渲染）
          clearing: True
          marking: True
          data_type: "LaserScan"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        #膨胀半径上的指数衰减因子
        cost_scaling_factor: 3.0
        #扩大致命障碍物周围的成本图的半径
        inflation_radius: 0.5
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: True
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

map_server:
  ros__parameters:
    use_sim_time: True
    #修改
    yaml_filename: "npu_map.yaml"
    topic_name: "map"
    frame_id: "map"

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5000
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: False

planner_server:
  ros__parameters:
  #修改
    expected_planner_frequency: 1.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    #修改一下这个地方
    #footprint_topic: local_costmap/published_footprint
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "back_up", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    back_up:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
      #修改
    global_frame: odom_link
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True
